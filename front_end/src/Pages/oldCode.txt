import "./Menu.css";
import React, { useState } from "react";
import stackImage from "../Img/stackImg.webp";
import queueImage from "../Img/queueImg.png";

function Menu() {
  const [showStartContent, setShowStartContent] = useState(false);
  const [showQueueContent, setShowQueueContent] = useState(false);

  const circlePositions = [
    { top: "60px", left: "90px", isOpen: true },
    { top: "150px", left: "-40px", isOpen: false, image: stackImage },
    { top: "220px", left: "-20px", isOpen: false, image: queueImage },
  ];

  const handleCircleHover = (index) => {
    setShowStartContent(index === 0);
    setShowQueueContent(index === 1);
  };

  return (
    <div id="mainDiv" className="main-div">
      <div id="menuBar" className="menu-bar">
        <button id="algolingoBtn" className="algolingo-button">
          AlgoLingo
        </button>
      </div>
      <div id="levelsBar" className="levels-bar">
        <button id="levelsBtn" className="levels-button">
          Levels
        </button>
        <div id="levelsSpace" className="levels-space">
          {circlePositions.map((position, index) => (
            <button
              key={index}
              className={`circles ${position.isOpen ? "" : "closed"}`}
              style={{ top: position.top, left: position.left }}
              onMouseEnter={() => handleCircleHover(index)}
              onMouseLeave={() => {
                setShowStartContent(false);
                setShowQueueContent(false);
              }}
            >
              {position.isOpen ? index + 1 : "X"}
            </button>
          ))}
        </div>
      </div>
      <div id="startBar" className="start-bar">
        <div
          id="imageContainer"
          className={`image-container ${
            showStartContent || showQueueContent ? "visible" : ""
          }`}
        >
          <img
            id="stackImage"
            className="image"
            src={
              showStartContent ? stackImage : showQueueContent ? queueImage : ""
            }
            alt={
              showStartContent
                ? "Stack Image"
                : showQueueContent
                ? "Queue Image"
                : ""
            }
          />
        </div>
        <button id="startBtn" className="start-button">
          Start
        </button>
      </div>
    </div>
  );
}

export default Menu;



* {
  background-color: #5d7779;
}
.main-div {
  display: flex;
}
.menu-bar {
  text-align: center;
  background-color: #d2d2d2;
  /* width: 16em; */
  width: 250px;
  /* height: 60em; */
  height: 960px;
  border: 2px solid grey;
  border-radius: 50px;
}

.algolingo-button {
  /* height: 4.5em; */
  height: 90px;
  /* width: 10.27em; */
  width: 250px;
  background-color: transparent;
  text-align: center;
  border: 2px solid gray;
  border-radius: 50px;
  /* font-size: 2.5vh; */
  font-size: 25px;
}

/* Media query for smaller screens */
/* @media screen and (max-width: 768px) {
  .menu-bar {
    width: 100%;
    height: auto;
    border-radius: 0;
  }
} */
.levels-bar {
  margin-left: 20px;
  text-align: center;
  background-color: #9ba79a;
  /* width: 16em; */
  width: 550px;
  height: 960px;
  /* height: 60em; */
  border: 2px solid grey;
  border-radius: 50px;
}
.levels-button {
  height: 90px;
  width: 550px;
  background-color: transparent;
  text-align: center;
  border: 2px solid gray;
  border-radius: 50px;
  font-size: 35px;
  font-weight: bold;
}
.start-bar {
  margin-left: 30px;
  text-align: center;
  background-color: #ffffff;
  /* width: 16em; */
  width: 550px;
  height: 960px;
  /* height: 60em; */
  border: 2px solid grey;
  border-radius: 50px;
}
.start-button {
  height: 90px;
  width: 450px;
  background-color: #589357;
  text-align: center;
  border: 2px solid gray;
  border-radius: 50px;
  font-size: 35px;
  font-weight: bold;
  color: aliceblue;
  margin-top: 50px;
  /* change this */
}
.levels-space {
  background-color: transparent;
  position: relative;
}
.circles {
  background-color: #589357;
  border-radius: 50%;
  width: 70px;
  height: 70px;
  font-size: 30px;
  color: white;
  border: 1px solid #589357;
  position: relative;
}

.circles:hover::before,
.circles:hover::after {
  /* Show triangles on hover */
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 20px;
}

.circles:hover::before {
  border-color: transparent transparent transparent #589357;
  top: 32%;
  left: -31px;
  margin-top: -10px;
}

.circles:hover::after {
  border-color: transparent #589357 transparent transparent;
  top: 32%;
  right: -31px;
  margin-top: -10px;
}
.circles.closed {
  background-color: grey;
  cursor: not-allowed; /* Optionally, you can add a cursor style to indicate it's not clickable */
}
.image-container {
  height: 234px;
  width: 500px;
  border-radius: 50px;
  border: 2px solid gray;
  margin-top: 20px;
  margin-left: 25px;
  background-color: transparent;
  align-items: center;
}
.image {
  height: 234px;
  width: 500px;
  background-color: transparent;
}
/* Add this CSS to hide the content initially */
.start-bar .image-container {
  display: none;
}

/* Add this CSS to show the content when needed */
.start-bar .image-container.visible {
  display: block;
}

